name: Tests

on:
  pull_request:
    branches:
    - "*"
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-20.04
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          HASURA_METADATA_DB: hasura
          DB_NAME: hord
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          PGUSER: postgres
          PGHOST: localhost
        volumes:
        - /home/runner/work/hord/.local/db/init.sh:/docker-entrypoint-initdb.d/init.sh
      app:
        image: hasura/graphql-engine:v2.0.7.cli-migrations-v3
        env:
          HASURA_GRAPHQL_DATABASE_URL: postgres://${{ secrets.DB_NAME }}:${{ secrets.DB_PASS }}@db/hord?sslmode=disable
          HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${{ secrets.DB_NAME }}:${{ secrets.DB_PASS }}@db/hasura?sslmode=disable
          HASURA_GRAPHQL_ENABLE_CONSOLE: false
          HASURA_GRAPHQL_ADMIN_SECRET: ${{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }}
          HASURA_GRAPHQL_JWT_SECRET: ${{ secrets.HASURA_GRAPHQL_JWT_SECRET }}
        volumes:
        - /home/runner/work/hord/migrations:/hasura-migrations
        - /home/runner/work/hord/metadata:/hasura-metadata
        # options: --health-cmd "nc -vz localhost 8080" --health-interval 10s --health-timeout 5s --health-retries 60 --health-start-period 60s
    # container:
    #   image: python:3.9-slim-buster
    #   env:
    #     HASURA_GRAPHQL_JWT_SECRET: ${{ secrets.HASURA_GRAPHQL_JWT_SECRET }}
    #     TEST_DSN: postgres://${{ secrets.DB_NAME }}:${{ secrets.DB_PASS }}@db/hord?sslmode=disable
    #     TEST_URL: http://app:8080
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Debug init.sh
      run: cat /home/runner/work/hord/.local/db/init.sh
    - name: Debug Postgres
      run: for i in $(seq 1 100); do docker ps | grep postgres | awk '{print $1}' | xargs -I % docker exec % ls /docker-entrypoint-initdb.d && sleep 1; done
    - name: Debug Hasura
      run: for i in $(seq 1 50); do docker ps | grep hasura | awk '{print $1}' | xargs docker logs && sleep 1; done
    # - name: Debug
    #   run: pwd
    # - name: Install dependencies
    #   run: pip install -r tests/requirements.txt
    # - name: Run tests
    #   run: pytest
